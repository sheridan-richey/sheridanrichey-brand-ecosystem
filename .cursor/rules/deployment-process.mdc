# Deployment & Technical Operations

## Deployment Infrastructure
- Use Vercel for hosting and deployment
- Follow the configuration in [vercel.json](mdc:vercel.json)
- Use the deployment script in [deploy.ps1](mdc:website/deploy.ps1)
- Maintain environment variables securely

## Build and Deployment Process
- Follow Next.js build process in [package.json](mdc:website/package.json)
- Use TypeScript compilation with strict mode
- Implement proper error handling and logging
- Test builds locally before deployment

## Configuration Files
- [Next.js Config](mdc:website/next.config.js) - Next.js specific settings
- [Tailwind Config](mdc:website/tailwind.config.js) - Styling configuration
- [TypeScript Config](mdc:website/tsconfig.json) - TypeScript settings
- [PostCSS Config](mdc:website/postcss.config.js) - CSS processing

## Environment Management
- Store sensitive data in environment variables
- Use different environments for development, staging, and production
- Implement proper API key management
- Secure database connections and external service integrations

## Performance Optimization
- Optimize images and assets for web delivery
- Implement proper caching strategies
- Use CDN for static assets
- Monitor Core Web Vitals and performance metrics
- Implement lazy loading for better user experience

## Security Standards
- Validate all user inputs
- Implement proper authentication and authorization
- Use HTTPS for all communications
- Regular security audits and updates
- Protect against common web vulnerabilities

## Monitoring and Analytics
- Implement error tracking and monitoring
- Set up performance monitoring
- Track user engagement and conversion metrics
- Monitor API response times and reliability
- Set up alerts for critical issues

## Backup and Recovery
- Regular database backups
- Version control for all code changes
- Document recovery procedures
- Test backup restoration processes
- Maintain disaster recovery plans

## Continuous Integration
- Automated testing on every commit
- Automated deployment on successful tests
- Code quality checks and linting
- Security scanning in CI/CD pipeline
- Performance regression testing
description:
globs:
alwaysApply: false
---
