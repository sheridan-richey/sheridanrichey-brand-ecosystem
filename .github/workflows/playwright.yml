name: Playwright E2E Tests

on:
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Deploy to Vercel via API
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          # Create deployment
          DEPLOYMENT_RESPONSE=$(curl -s -X POST \
            -H "Authorization: Bearer $VERCEL_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{
              "name": "github-actions-deploy",
              "projectId": "'$VERCEL_PROJECT_ID'",
              "target": "preview"
            }' \
            "https://api.vercel.com/v1/deployments")
          
          echo "Deployment response: $DEPLOYMENT_RESPONSE"
          
          # Extract deployment URL
          DEPLOYMENT_URL=$(echo $DEPLOYMENT_RESPONSE | jq -r '.url // empty')
          
          if [ -z "$DEPLOYMENT_URL" ]; then
            echo "Failed to get deployment URL"
            exit 1
          fi
          
          echo "VERCEL_URL=https://$DEPLOYMENT_URL" >> $GITHUB_ENV
          echo "Deployment URL: https://$DEPLOYMENT_URL"

      - name: Run Playwright tests
        env:
          BASE_URL: ${{ env.VERCEL_URL }}
        run: npx playwright test --project=chromium 
